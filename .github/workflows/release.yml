name: Release

on:
  push:
    branches:
      - 'master'
    tags:
      - 'v*'

env:
  PROJECT_NAME: "moden-cpp-template"
  BUILD_TYPE: Release

jobs:
  build:
    name: ${{ matrix.config.name }}
    #if: "!contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[ci skip]')"
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows Latest MSVC",
            artifact: "modern-cpp-template-windows.zip",
            os: windows-latest,
            cc: "cl",
            cxx: "cl",
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat",
          }
        - {
            name: "Ubuntu Latest GCC",
            artifact: "Linux.tar.xz",
            os: ubuntu-latest,
            cc: "gcc",
            cxx: "g++",
          }
        - {
            name: "macOS Latest Clang",
            artifact: "macOS.tar.xz",
            os: macos-latest,
            cc: "clang",
            cxx: "clang++",
          }

    steps:
    
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: cache dependencies
      uses: actions/cache@v2
      id: cache
      with:
        path: ${{github.HOME}}/.local
        key: ${{runner.os}}-dependencies

    - name: install GoogleTest
      if: ${{steps.cache.output.cache-hit != 'true'}}
      run: |
        cd ..
        git clone https://github.com/google/googletest.git --branch release-1.10.0
        cd googletest
        cmake -Bbuild -DCMAKE_INSTALL_PREFIX="$HOME" -Dgtest_force_shared_crt=1
        cmake --build build --config Release
        cmake --build build --target install --config Release
        cd ../modern-cpp-template

    - name: configure
      run: cmake -Bbuild -DCMAKE_INSTALL_PREFIX="$HOME"
      
    - name: build
      run: cmake --build build --config "$env:BUILD_TYPE" -j4

    - name: run tests
      run: |
        cd build
        ctest -C "$env:BUILD_TYPE" -VV

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.config.artifact }}
        path: build/app*

  release:
    if: contains(github.ref, 'tags/v')
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v2

      #    - name: Upload to Release
      #      uses: meeDamian/github-release@2.0
      #      with:
      #        files: >
      #          Windows-MSVC.tar.xz
      #          Windows-MinGW.tar.xz
      #          Linux.tar.xz
      #          macOS.tar.xz
      #        gzip: folders
      #        token: ${{ secrets.GITHUB_TOKEN }}
